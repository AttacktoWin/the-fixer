on:
  push:
    branches:
    - main
    
jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v3.3.0
      with:
        ref: main
        lfs: true
        
    - name: install wine
      id: wine_install
      run: |
        sudo apt install wine64
        echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT
  
    - name: export game
      id: export
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v5.0.0
      with:
        # Defining all the required inputs
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/3.5.1/Godot_v3.5.1-stable_linux_headless.64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/3.5.1/Godot_v3.5.1-stable_export_templates.tpz
        relative_project_path: ./
        use_godot_3: true

    - name: Archive Windows Build
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: './exports/Within The Vault - Windows.zip'
        path: './Bin/win'
        exclusions: '*.git*'

    - uses: actions/checkout@master
    - name: Copy OSX Build
      run: |
        find ./Bin/osx -type f -name "Within The Vault.zip" | while read fname; do
          dirname=`dirname "$fname"`
          foldername=`basename "$dirname"`
          filename=`basename "$fname"`
          cp "${dirname}/$filename" "./exports/Within The Vault - osx.zip"
        done

    - name: Archive Linux Build
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'tar'
        filename: './exports/Within The Vault - Linux.tar.gz'
        path: './Bin/linux'
        exclusions: '*.git*'

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
    - name: Push To Itch
      uses: Ayowel/butler-to-itch@v1.0.0
      with:
        butler_key: ${{ secrets.BUTLER_CREDENTIALS }}
        itch_user: variable-eye-games
        itch_game: within-the-vault
        version: ${{ steps.date.outputs.date }}
        # We assume that we have the following files in ./export:
        # Within The Vault - Windows.zip, Wihtin The Vault - osx.zip,
        # Wihtin The Vault - Linuz.tar.gz
        files: ./exports/*
